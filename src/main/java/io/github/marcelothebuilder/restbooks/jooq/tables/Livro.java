/**
 * This class is generated by jOOQ
 */
package io.github.marcelothebuilder.restbooks.jooq.tables;


import io.github.marcelothebuilder.restbooks.jooq.Keys;
import io.github.marcelothebuilder.restbooks.jooq.Public;
import io.github.marcelothebuilder.restbooks.jooq.tables.records.LivroRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DateAsTimestampBinding;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Livro extends TableImpl<LivroRecord> {

	private static final long serialVersionUID = 57360372;

	/**
	 * The reference instance of <code>PUBLIC.LIVRO</code>
	 */
	public static final Livro LIVRO = new Livro();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<LivroRecord> getRecordType() {
		return LivroRecord.class;
	}

	/**
	 * The column <code>PUBLIC.LIVRO.CODIGO</code>.
	 */
	public final TableField<LivroRecord, Long> CODIGO = createField("CODIGO", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>PUBLIC.LIVRO.NOME</code>.
	 */
	public final TableField<LivroRecord, String> NOME = createField("NOME", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.LIVRO.PUBLICACAO</code>.
	 */
	public final TableField<LivroRecord, Timestamp> PUBLICACAO = createField("PUBLICACAO", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "", new DateAsTimestampBinding());

	/**
	 * The column <code>PUBLIC.LIVRO.EDITORA</code>.
	 */
	public final TableField<LivroRecord, String> EDITORA = createField("EDITORA", org.jooq.impl.SQLDataType.VARCHAR.length(60).nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.LIVRO.RESUMO</code>.
	 */
	public final TableField<LivroRecord, String> RESUMO = createField("RESUMO", org.jooq.impl.SQLDataType.VARCHAR.length(1000), this, "");

	/**
	 * The column <code>PUBLIC.LIVRO.AUTOR</code>.
	 */
	public final TableField<LivroRecord, String> AUTOR = createField("AUTOR", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

	/**
	 * Create a <code>PUBLIC.LIVRO</code> table reference
	 */
	public Livro() {
		this("LIVRO", null);
	}

	/**
	 * Create an aliased <code>PUBLIC.LIVRO</code> table reference
	 */
	public Livro(String alias) {
		this(alias, LIVRO);
	}

	private Livro(String alias, Table<LivroRecord> aliased) {
		this(alias, aliased, null);
	}

	private Livro(String alias, Table<LivroRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<LivroRecord, Long> getIdentity() {
		return Keys.IDENTITY_LIVRO;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<LivroRecord> getPrimaryKey() {
		return Keys.CONSTRAINT_4;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<LivroRecord>> getKeys() {
		return Arrays.<UniqueKey<LivroRecord>>asList(Keys.CONSTRAINT_4);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Livro as(String alias) {
		return new Livro(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Livro rename(String name) {
		return new Livro(name, null);
	}
}
